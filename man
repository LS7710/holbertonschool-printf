NAME
    _printf - custom implementation of the printf function for formatted output conversion.

SYNOPSIS
    #include "main.h"

    int _printf(const char *format, ...);

DESCRIPTION
    The _printf function is a custom implementation of the standard printf function found in C's standard I/O library. It performs formatted output conversion and writes the results to standard output. This function is designed to mimic the basic functionality of printf, supporting a subset of its format specifiers.

    The format string is composed of zero or more directives: ordinary characters (not %), which are copied unchanged to the output stream; and conversion specifications, each of which results in fetching zero or more subsequent arguments. Each conversion specification is introduced by the character % and ends with a conversion specifier.

    Supported format specifiers:
    - %c: Prints a single character.
    - %s: Prints a string (array of characters).
    - %%: Prints a percent sign.
    - %d: Prints a decimal (base 10) number.
    - %i: Prints an integer in base 10.

PARAMETERS
    format - A null-terminated string that specifies the output format. This string contains ordinary characters that are copied unchanged to the output and format specifiers that define how subsequent arguments (accessed via the variable-length argument facilities of stdarg) are converted for output.

    ... - A variable number of arguments, each corresponding to a format specifier within the format string.

RETURN VALUE
    Upon successful return, _printf returns the number of characters printed (excluding the null byte used to end output to strings). If an error occurs, a negative value is returned.

EXAMPLES
    #include "main.h"

    int main(void) {
        _printf("Hello, World!\n");
        _printf("Character: %c, String: %s, Percent: %%\n", 'A', "test");
        _printf("Decimal: %d, Integer: %i\n", 123, 456);
        return 0;
    }

AUTHOR
    Written by 
              Xavier Cruz
              Luis Soto

SEE ALSO
    printf(3), fprintf(3), sprintf(3), snprintf(3), vprintf(3)

